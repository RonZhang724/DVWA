diff --git a/README.md b/README.md
index a623d76..45b6ea6 100644
--- a/README.md
+++ b/README.md
@@ -1,2 +1,14 @@
 # DVWA
 Deploy DVWA and SQL server in the Kubernetes cluster
+
+**3b) Creating a kubernetes cluster for DVWA**
+
+- All files used for the lab should be in the github repository. Mention the commands used to transfer the images into kubernetes registry in the README file. Create a commit of all the changes and submit the patch file of the change. You can create a patch by running the following command. `git diff HEAD~1..HEAD > patch.diff` This creates patch file between last two commits. If you have multiple commits, edit the git diff appropriately to encorporate all your changes.
+
+  - I followed the following steps to transfer images to kubernetes registry
+  - Enable the registry service on microk8s `microk8s.enable registry`
+    - Build the image of DVWA and SQL using the Dockerfiles `docker build -t dvwa:latest` and `docker build -t sql:latest`
+    - Tag the image to make sure they are pointing to the registry 
+      - `docker tag <image-id> localhost:32000/dvwa:k8s`
+      - `docker tag <image-id> localhost:32000/sql:k8s`
+    - Push the image to the local registry `docker push localhost:32000/<image-name>`
diff --git a/patch.diff b/patch.diff
new file mode 100644
index 0000000..5d55de9
--- /dev/null
+++ b/patch.diff
@@ -0,0 +1,154 @@
+diff --git a/Dockerfile b/Dockerfile
+new file mode 100644
+index 0000000..fee245a
+--- /dev/null
++++ b/Dockerfile
+@@ -0,0 +1,34 @@
++FROM debian:9.2
++
++LABEL maintainer "opsxcq@strm.sh"
++
++RUN apt-get update && \
++    apt-get upgrade -y && \
++    DEBIAN_FRONTEND=noninteractive apt-get install -y \
++    debconf-utils && \
++    echo mariadb-server mysql-server/root_password password vulnerables | debconf-set-selections && \
++    echo mariadb-server mysql-server/root_password_again password vulnerables | debconf-set-selections && \
++    DEBIAN_FRONTEND=noninteractive apt-get install -y \
++    apache2 \
++    mariadb-server \
++    php \
++    php-mysql \
++    php-pgsql \
++    php-pear \
++    php-gd \
++    && \
++    apt-get clean && \
++    rm -rf /var/lib/apt/lists/*
++
++COPY php.ini /etc/php5/apache2/php.ini
++COPY dvwa /var/www/html
++
++COPY config.inc.php /var/www/html/config/
++
++RUN chown www-data:www-data -R /var/www/html && \
++    rm /var/www/html/index.html
++
++EXPOSE 80
++
++COPY main.sh /
++ENTRYPOINT ["/main.sh"]
+diff --git a/Dockerfile_sql b/Dockerfile_sql
+new file mode 100644
+index 0000000..88d8843
+--- /dev/null
++++ b/Dockerfile_sql
+@@ -0,0 +1,36 @@
++FROM debian:9.2
++
++LABEL maintainer "opsxcq@strm.sh"
++
++RUN apt-get update && \
++    apt-get upgrade -y && \
++    DEBIAN_FRONTEND=noninteractive apt-get install -y \
++    debconf-utils && \
++    echo mariadb-server mysql-server/root_password password vulnerables | debconf-set-selections && \
++    echo mariadb-server mysql-server/root_password_again password vulnerables | debconf-set-selections && \
++    DEBIAN_FRONTEND=noninteractive apt-get install -y \
++    apache2 \
++    mariadb-server \
++    php \
++    php-mysql \
++    php-pgsql \
++    php-pear \
++    php-gd \
++    && \
++    apt-get clean && \
++    rm -rf /var/lib/apt/lists/*
++
++COPY php.ini /etc/php5/apache2/php.ini
++COPY dvwa /var/www/html
++
++COPY config.inc.php /var/www/html/config/
++
++RUN service mysql start && \
++    sleep 3 && \
++    mysql -uroot -pvulnerables -e "CREATE USER app@localhost IDENTIFIED BY 'vulnerables';CREATE DATABASE dvwa;GRANT ALL privileges ON dvwa.* TO 'app'@localhost;"
++
++EXPOSE 80
++
++COPY main.sh /
++ENTRYPOINT ["/main.sh"]
++
+diff --git a/dvwa-svc.yaml b/dvwa-svc.yaml
+index 79ccff6..00e345b 100644
+--- a/dvwa-svc.yaml
++++ b/dvwa-svc.yaml
+@@ -7,7 +7,7 @@ metadata:
+ spec:
+   type: NodePort
+   ports:
+-  - port: 8000
++  - port: 80
+     protocol: TCP
+   selector:
+     app: dvwa-app
+diff --git a/dvwa.yaml b/dvwa.yaml
+index 92cc783..dfa8ddb 100644
+--- a/dvwa.yaml
++++ b/dvwa.yaml
+@@ -20,3 +20,7 @@ spec:
+         ports:
+         - containerPort: 80
+           name: dvwa
++        resources:
++          limits:
++            cpu: 100m
++            memory: 70Mi
+diff --git a/sql-svc.yaml b/sql-svc.yaml
+new file mode 100644
+index 0000000..d9a4068
+--- /dev/null
++++ b/sql-svc.yaml
+@@ -0,0 +1,13 @@
++apiVersion: v1
++kind: Service
++metadata:
++  name: sql
++  labels:
++    app: dvwa-app
++spec:
++  type: NodePort
++  ports:
++  - port: 80
++    protocol: TCP
++  selector:
++    app: dvwa-app
+diff --git a/sql.yaml b/sql.yaml
+new file mode 100644
+index 0000000..7f663a0
+--- /dev/null
++++ b/sql.yaml
+@@ -0,0 +1,22 @@
++apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
++kind: Deployment
++metadata:
++  name: sql
++spec:
++  selector:
++    matchLabels:
++      app: dvwa-app
++  strategy:
++    type: Recreate
++  template:
++    metadata:
++      labels:
++        app: dvwa-app
++    spec:
++      containers:
++      - image: localhost:32000/sql:k8s
++        name: sql
++        imagePullPolicy: IfNotPresent
++        ports:
++        - containerPort: 80
++          name: sql
